{"version":3,"sources":["Phonebook/Contacts/Contacts.jsx","Filter/Filter.jsx","Phonebook/Phonebook.jsx","App/App.jsx","index.js"],"names":["Contacts","props","contacts","map","contact","nanoid","Filter","label","value","onFilterChange","type","onChange","e","target","Phonebook","state","name","number","filter","handleFilterChange","setState","getFilteredContact","normalizeFilter","toLowerCase","includes","inputValue","preventDefault","prevState","this","onSubmit","pattern","title","required","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAEe,SAASA,EAASC,GAC/B,OAAOA,EAAMC,SAASC,KAAI,SAACC,GACzB,OAAO,8BAAqBA,GAAXC,kBCJN,SAASC,EAAT,GAAwD,IAAD,IAArCC,aAAqC,MAA7B,GAA6B,EAAzBC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,eAClD,OACE,8BACE,kCACGF,EACD,uBACEG,KAAK,OACLF,MAAOA,EACPG,SAAU,SAACC,GAAD,OAAOH,EAAeG,EAAEC,OAAOL,e,UCH7CM,E,4MACJC,MAAQ,CACNb,SAAU,EAAKD,MAAMC,SACrBc,KAAM,EAAKf,MAAMe,KACjBC,OAAQ,EAAKhB,MAAMgB,OACnBC,OAAQ,I,EAGVC,mBAAqB,SAACX,GACpB,EAAKY,SAAS,CAAEF,OAAQV,K,EAG1Ba,mBAAqB,WACnB,MAA6B,EAAKN,MAA1Bb,EAAR,EAAQA,SACFoB,EADN,EAAkBJ,OACaK,cAC/B,OAAOrB,EAASC,KAAI,SAACC,GACnBA,EAAQmB,cAAcC,SAASF,O,EAInCG,WAAa,SAACb,GACZA,EAAEc,iBACF,IAAMtB,EAAUQ,EAAEC,OAAO,GAAGL,MACtBS,EAASL,EAAEC,OAAO,GAAGL,MAE3B,EAAKY,UAAS,SAACO,GACb,MAAO,CAAEzB,SAAS,GAAD,mBAAMyB,EAAUzB,UAAhB,WAA6BE,EAA7B,aAAyCa,U,4CAK9D,WACE,MAA6BW,KAAKb,MAAhBG,GAAlB,EAAQhB,SAAR,EAAkBgB,QAClB,OACE,qCACE,uBAAMW,SAAUD,KAAKH,WAArB,UACE,8CACA,uBACEf,KAAK,OACLM,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,IAEV,uBACEtB,KAAK,MACLM,KAAK,SACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,IAEV,oDAEF,0CACA,cAAC1B,EAAD,CACEE,MAAOU,EACPX,MAAO,yBACPE,eAAgBmB,KAAKT,qBAEvB,cAACnB,EAAD,CAAUE,SAAU0B,KAAKP,8B,GA3DTY,aAiETnB,ICpEA,SAASoB,IACtB,OACE,gCACE,2CACA,cAAC,EAAD,CAAWhC,SAAU,GAAIc,KAAM,GAAIC,OAAQ,QCDjDkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.1fbc0fa4.chunk.js","sourcesContent":["import { nanoid } from \"nanoid\";\r\n\r\nexport default function Contacts(props) {\r\n  return props.contacts.map((contact) => {\r\n    return <div key={nanoid()}>{contact}</div>;\r\n  });\r\n}\r\n","export default function Filter({ label = \"\", value, onFilterChange }) {\r\n  return (\r\n    <div>\r\n      <label>\r\n        {label}\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onFilterChange(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport s from \"./Phonebook.module.scss\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: this.props.contacts,\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n    filter: \"\",\r\n  };\r\n\r\n  handleFilterChange = (value) => {\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getFilteredContact = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.map((contact) => {\r\n      contact.toLowerCase().includes(normalizeFilter);\r\n    });\r\n  };\r\n\r\n  inputValue = (e) => {\r\n    e.preventDefault();\r\n    const contact = e.target[0].value;\r\n    const number = e.target[1].value;\r\n\r\n    this.setState((prevState) => {\r\n      return { contacts: [...prevState.contacts, `${contact}: ${number}`] };\r\n    });\r\n    // e.target[0].reset();\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.inputValue}>\r\n          <h2>Name contact</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n          <button>Add contact</button>\r\n        </form>\r\n        <h1>Contacts</h1>\r\n        <Filter\r\n          value={filter}\r\n          label={\"Finde contact by name:\"}\r\n          onFilterChange={this.handleFilterChange}\r\n        />\r\n        <Contacts contacts={this.getFilteredContact()} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import Phonebook from \"../Phonebook/Phonebook\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Phonebook contacts={[]} name={\"\"} number={\"\"} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}