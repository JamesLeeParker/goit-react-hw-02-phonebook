(this["webpackJsonpgoit-react-hw-02-feedback"]=this["webpackJsonpgoit-react-hw-02-feedback"]||[]).push([[0],{14:function(t,e,n){},16:function(t,e,n){},17:function(t,e,n){"use strict";n.r(e);var a=n(1),c=n.n(a),r=n(3),s=n.n(r),o=(n(14),n(6)),i=n(4),u=n(5),l=n(8),d=n(7),b=n(9),j=n(0);function h(t){return t.contacts.map((function(t){return Object(j.jsx)("div",{children:t},Object(b.a)())}))}function p(t){var e=t.label,n=void 0===e?"":e,a=t.value,c=t.onFilterChange;return Object(j.jsx)("div",{children:Object(j.jsxs)("label",{children:[n,Object(j.jsx)("input",{type:"text",value:a,onChange:function(t){return c(t.target.value)}})]})})}n(16);var m=function(t){Object(l.a)(n,t);var e=Object(d.a)(n);function n(){var t;Object(i.a)(this,n);for(var a=arguments.length,c=new Array(a),r=0;r<a;r++)c[r]=arguments[r];return(t=e.call.apply(e,[this].concat(c))).state={contacts:t.props.contacts,name:t.props.name,number:t.props.number,filter:""},t.handleFilterChange=function(e){t.setState({filter:e})},t.getFilteredContact=function(){var e=t.state,n=e.contacts,a=e.filter.toLowerCase();return n.map((function(t){t.toLowerCase().includes(a)}))},t.inputValue=function(e){e.preventDefault();var n=e.target[0].value,a=e.target[1].value;t.setState((function(t){return{contacts:[].concat(Object(o.a)(t.contacts),["".concat(n,": ").concat(a)])}}))},t}return Object(u.a)(n,[{key:"render",value:function(){var t=this.state,e=(t.contacts,t.filter);return Object(j.jsxs)(j.Fragment,{children:[Object(j.jsxs)("form",{onSubmit:this.inputValue,children:[Object(j.jsx)("h2",{children:"Name contact"}),Object(j.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),Object(j.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0}),Object(j.jsx)("button",{children:"Add contact"})]}),Object(j.jsx)("h1",{children:"Contacts"}),Object(j.jsx)(p,{value:e,label:"Finde contact by name:",onFilterChange:this.handleFilterChange}),Object(j.jsx)(h,{contacts:this.getFilteredContact()})]})}}]),n}(a.Component),f=m;function O(){return Object(j.jsxs)("div",{children:[Object(j.jsx)("h1",{children:"Phonebook"}),Object(j.jsx)(f,{contacts:[],name:"",number:""})]})}s.a.render(Object(j.jsx)(c.a.StrictMode,{children:Object(j.jsx)(O,{})}),document.getElementById("root"))}},[[17,1,2]]]);
//# sourceMappingURL=main.1fbc0fa4.chunk.js.map